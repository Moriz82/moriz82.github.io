name: Update HTB Stats

on:
  workflow_dispatch:   # lets you run manually from the Actions tab
  schedule:
    - cron: "0 */12 * * *"  # optional: run every 12h

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write 

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up jq
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Fetch HTB stats
        env:
          HTB_APPKEY: ${{ secrets.HTB_APPKEY }}
        run: |
          auth="Authorization: Bearer ${HTB_APPKEY}"
          acc="Accept: application/json"

          fetch_all_pages () {
            local url="$1"
            while [[ -n "$url" ]]; do
              j="$(curl -sS -H "$auth" -H "$acc" "$url")"
              echo "$j"
              url="$(echo "$j" | jq -r '.links.next // empty')"
            done
          }

          # --- 1) Counts: active + retired combined ---
          active_json=$(fetch_all_pages "https://labs.hackthebox.com/api/v4/machine/paginated")
          retired_json=$(fetch_all_pages "https://labs.hackthebox.com/api/v4/machine/list/retired/paginated")

          all_machines=$(printf '%s\n%s\n' "$active_json" "$retired_json" |
            jq -s 'map(.data // .message // []) | add | unique_by(.id)')

          owned_counts=$(echo "$all_machines" |
            jq 'map(select(.authUserInUserOwns == true or .authUserInRootOwns == true))')

          difficulties=$(echo "$owned_counts" | jq '
            group_by(.difficultyText)
            | map({label: (.[0].difficultyText // "Unknown"), value: length})
            | sort_by(.label)
          ')

          # --- 2) Recent Boxes: only from active list ---
          owned_active=$(echo "$active_json" |
            jq -s 'map(.data // .message // []) | add
                   | map(select(.authUserInUserOwns == true or .authUserInRootOwns == true))')

          boxes=$(echo "$owned_active" | jq '
            sort_by(.release) | reverse
            | map({ name: .name,
                    difficulty: .difficultyText,
                    date: .release,
                    summary: .os })
            | unique_by(.name)
            | .[0:3]
          ')

          # --- Merge into final JSON ---
          mkdir -p data
          jq -n --argjson d "$difficulties" --argjson b "$boxes" \
            '{difficulties: $d, boxes: $b}' > data/htb.json

      - name: Commit updated JSON
        run: |
          git config user.name "moriz82"
          git config user.email "moriz82t@example.com"
          git add data/htb.json
          git commit -m "action: update HTB stats" || echo "No changes to commit"
          git push
